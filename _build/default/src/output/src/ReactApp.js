// Generated by Melange

import * as Caml_option from "melange.js/caml_option.js";
import * as Curry from "melange.js/curry.js";
import * as Music from "./music/music.js";
import * as Synth from "./synth/synth.js";
import * as React from "react";
import * as Client from "react-dom/client";
import * as JsxRuntime from "react/jsx-runtime";

function ReactApp$App(Props) {
  var match = React.useState(function () {
        
      });
  var setSynth = match[1];
  var synth = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setAudioContextStarted = match$1[1];
  return JsxRuntime.jsxs("div", {
              children: [
                match$1[0] ? JsxRuntime.jsx("div", {
                        children: "Audio Ready"
                      }) : JsxRuntime.jsx("button", {
                        children: "Start Audio",
                        onClick: (function (_event) {
                            var synth = Caml_option.some(Synth.createPolySynth(undefined));
                            Curry._1(setSynth, (function (param) {
                                    return synth;
                                  }));
                            Curry._1(setAudioContextStarted, (function (param) {
                                    return true;
                                  }));
                            console.log("Audio Started");
                          })
                      }),
                JsxRuntime.jsx("button", {
                      children: "Play Note",
                      onClick: (function (_event) {
                          var note = Music.Note.of_number(0, 4);
                          if (synth !== undefined) {
                            Synth.play_note(Caml_option.valFromOption(synth), note);
                            console.log("Playing note");
                          } else {
                            console.log("Synth not initialized");
                          }
                        })
                    }),
                JsxRuntime.jsx("button", {
                      children: "Play Notes",
                      onClick: (function (_event) {
                          if (synth !== undefined) {
                            Synth.Play.chord(Caml_option.valFromOption(synth), Music.Note.c4, /* Major */0);
                            console.log("Playing notes");
                          } else {
                            console.log("Synth not initialized");
                          }
                        })
                    })
              ]
            });
}

var App = {
  make: ReactApp$App
};

var param = document.querySelector("#root");

if (param == null) {
  console.error("Failed to start React: couldn't find the #root element");
} else {
  Client.createRoot(param).render(JsxRuntime.jsx(ReactApp$App, {}));
}

export {
  App ,
}
/* param Not a pure module */
